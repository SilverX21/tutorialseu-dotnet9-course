@using DevSpot.Constants
@model IEnumerable<JobPosting>

<h1 class="text-center m-5">All Developer Jobs</h1>

<div class="list-group">
    @foreach (var jobPosting in Model)
    {
        <div class="list-group-item" id="job-posting-@jobPosting.Id">
            <h3>@jobPosting.Title</h3>
            <p>@jobPosting.Description</p>
            <p><strong>Company: </strong>@jobPosting.Company</p>
            <p><strong>Location: </strong>@jobPosting.Location</p>
            <p><strong>Posted date: </strong>@jobPosting.PostedDate.ToShortDateString()</p>

            @if (User.IsInRole(Roles.Admin) || User.IsInRole(Roles.Employer))
            {
                <div>
                    <button onclick="deleteJobPosting(@jobPosting.Id)" class="btn btn-sm btn-danger">Delete</button>
                </div>
            }

            @if (false)
            {
                <!--The a tag approach is not the best because there's no feedback provided to the user-->
                <a asp-action="DeleteEasy" asp-route-id="@jobPosting.Id">Delete</a>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        function deleteJobPosting(id) {
            //confirm -> will show a popup in the browser
            if(confirm("Are you sure you want to delete this job posting? "))
            {
                //we can use the Url.Action() method to generate the URL for our controller
                $.ajax({
                    url: "@Url.Action("Delete", "JobPostings")/" + id,
                    type: 'DELETE',
                    success: function (result) {
                        $("#job-posting-" + id).remove(); //here we remove the job posting from the list
                    },
                    error: function (err) {
                        alert("An error occured! Error: " + err);
                    }
                });
            }
        }
    </script>

}