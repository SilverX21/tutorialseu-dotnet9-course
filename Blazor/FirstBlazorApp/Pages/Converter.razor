@page "/converter"

<h3>Converter</h3>

<label>KG</label>
<input type="number" @bind-value="@Kilos" @bind-value:event="oninput" />
<span> = </span>
<input type="number" @bind-value="@Grams" @bind-value:event="oninput" />
<label>g</label>

@code {
    private double kilos = 1;
    private double grams = 1000;

    public double Kilos
    {
        get => kilos;
        set {
            grams = value * 1000;
            kilos = value;
        }
    }

    public double Grams
    {
        get => grams;
        set
        {
            kilos = value / 1000;
            grams = value;
        }
    }
}


@{
    //@bind-value:
    //This directive creates a two-way binding between the input element and the corresponding property (either Kilos or Grams) in your component. When the user changes the value in the input, the bound property gets updated, and vice versa

    //@bind-value:event="oninput":
    //By default, two-way binding on input elements in Blazor is triggered on the onchange event (which typically happens when the input loses focus). Setting the event to oninput means that the binding will update as soon as the user types, providing a more immediate, real-time update.

    //what will happen: When you change one of them, the other updates automatically based on the conversion factor
}